From 96c4cb07b2a52124021c807f2c1ad4ab1f1cbf9c Mon Sep 17 00:00:00 2001
From: pipetto-crypto <pipetto-crypto@gmail.com>
Date: Fri, 9 Aug 2024 17:27:59 +0200
Subject: [PATCH] wsi: restore wsi_init_pthread_cond_monotonic as required by
 the older wsi_common_x11 file

---
 src/vulkan/wsi/wsi_common.c     | 26 ++++++++++++++++++++++++++
 src/vulkan/wsi/wsi_common.h     |  3 +++
 src/vulkan/wsi/wsi_common_x11.c |  4 ++--
 3 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/src/vulkan/wsi/wsi_common.c b/src/vulkan/wsi/wsi_common.c
index c85cdfe18539a..9e0df90bc2624 100644
--- a/src/vulkan/wsi/wsi_common.c
+++ b/src/vulkan/wsi/wsi_common.c
@@ -28,6 +28,7 @@
 #include "util/os_file.h"
 #include "util/os_time.h"
 #include "util/xmlconfig.h"
+#include <bits/pthreadtypes.h>
 #include "vk_device.h"
 #include "vk_fence.h"
 #include "vk_format.h"
@@ -58,6 +59,31 @@ static const struct debug_control debug_control[] = {
    { NULL, },
 };
 
+#if defined(HAVE_PTHREAD) && !defined(_WIN32)
+bool
+wsi_init_pthread_cond_monotonic(pthread_cond_t* cond){
+   pthread_condattr_t condattr;
+   bool ret = false;
+
+   if(pthread_condattr_init(&condattr) != 0)
+      goto fail_attr_init;
+
+   if (pthread_condattr_setclock(&condattr, CLOCK_MONOTONIC) != 0)
+      goto fail_attr_set;
+
+   if (pthread_cond_init(cond, &condattr) != 0)
+      goto fail_cond_init;
+
+   ret = true;
+
+   fail_cond_init:
+   fail_attr_set:
+      pthread_condattr_destroy(&condattr);
+   fail_attr_init:
+      return ret;
+}
+#endif
+
 VkResult
 wsi_device_init(struct wsi_device *wsi,
                 VkPhysicalDevice pdevice,
diff --git a/src/vulkan/wsi/wsi_common.h b/src/vulkan/wsi/wsi_common.h
index 014cb718b1786..007a0995087f9 100644
--- a/src/vulkan/wsi/wsi_common.h
+++ b/src/vulkan/wsi/wsi_common.h
@@ -281,6 +281,9 @@ struct wsi_device_options {
    bool extra_xwayland_image;
 };
 
+bool
+wsi_init_pthread_cond_monotonic(pthread_cond_t* cond);
+
 VkResult
 wsi_device_init(struct wsi_device *wsi,
                 VkPhysicalDevice pdevice,
diff --git a/src/vulkan/wsi/wsi_common_x11.c b/src/vulkan/wsi/wsi_common_x11.c
index 9ecee09ee712c..d7c70defab150 100644
--- a/src/vulkan/wsi/wsi_common_x11.c
+++ b/src/vulkan/wsi/wsi_common_x11.c
@@ -2337,7 +2337,7 @@ x11_surface_create_swapchain(VkIcdSurfaceBase *icd_surface,
       vk_free(pAllocator, chain);
       return VK_ERROR_OUT_OF_HOST_MEMORY;
    }
-   /*
+
    bool bret = wsi_init_pthread_cond_monotonic(&chain->present_progress_cond);
    if (!bret) {
       pthread_mutex_destroy(&chain->present_progress_mutex);
@@ -2345,7 +2345,7 @@ x11_surface_create_swapchain(VkIcdSurfaceBase *icd_surface,
       vk_free(pAllocator, chain);
       return VK_ERROR_OUT_OF_HOST_MEMORY;
    }
-   */
+
    struct wsi_base_image_params *image_params = NULL;
    struct wsi_cpu_image_params cpu_image_params;
    struct wsi_drm_image_params drm_image_params;
-- 
GitLab

